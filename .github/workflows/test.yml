name: PHP Tests

env:
  APP_NAME: twofactor_admin

on:
  workflow_call:
    inputs:
      database:
        required: true
        type: string
      DB_ROOT_PASSWORD:
        required: true
        type: string

jobs:
  test-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions:
          - '7.4'
          - '8.0'
        nextcloud-versions:
          - stable23
          - stable24
        include:
          - nextcloud-versions: stable23
            php-versions: '7.3'
          - nextcloud-versions: stable24
            php-versions: '8.1'
    name: php${{ matrix.php-versions }}-${{ inputs.database }} on ${{ matrix.nextcloud-versions }}
    steps:
      - name: Checkout server
        uses: actions/checkout@v3
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}
      - name: Set up php${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, iconv, fileinfo, intl, ${{ inputs.database }}, pdo_${{ inputs.database }}
          tools: phpunit:9.5
          coverage: none
      - name: Install PHP dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i
      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=${{ inputs.database }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=${{ inputs.DB_ROOT_PASSWORD }} --admin-user admin --admin-pass password
          php -f index.php
          ./occ app:enable --force ${{ env.APP_NAME }}
      - name: PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: phpunit -c tests/phpunit.xml
